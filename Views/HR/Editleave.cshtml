@model LeaveManagementSystemValueCreed.Models.Leave

@{
    Layout = null;
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit Leave</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js">
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js">
    </script>

    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js">
    </script>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal" style="text-align:center">
        <h4>Edit Leave Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Employee_Id)
        @Html.HiddenFor(model => model.Leave_apply_date)

        @*<div class="form-group">
            @Html.LabelFor(model => model.Employee_Id, "Employee_Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employee_Id, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Employe_name, "Employee Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Employe_name, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Employe_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaveType, "Leave Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.LeaveType, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Start_Date, "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Start_Date, "{0:dd/MM/yyyy}", new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.End_Date, "End Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.End_Date, "{0:dd/MM/yyyy}", new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number_of_Days, "Number of Days", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Number_of_Days, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Number_of_Days, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Reason, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownList("Status", new List<SelectListItem>
             {
                new SelectListItem{Text="Approved",Value="Approved By HR"},
                new SelectListItem{Text="Reject",Value="Rejected By HR"},
              }, "Select Option", new { required = default(string) })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Remark", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Save" class="btn btn-success" />
                @ViewBag.Message
            </div>
        </div>
    </div>
    }

    <div style="text-align:center">
        @Html.ActionLink("Back to List", "Leave")
    </div>
</body>
</html>
