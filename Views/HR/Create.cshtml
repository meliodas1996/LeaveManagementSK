@model LeaveManagementSystemValueCreed.Models.UsersTable

@{
    ViewBag.Title = "Create";
    Layout = "";
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>
        #logoff {
            position: absolute;
            right: 5%;
            top: 3%;
        }
        #back-div {
            position: absolute;
            right: 3%;
            top: 0%;
        }

        #back {
            position: absolute;
            right: 8%;
            top: 15%;
        }

        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            text-align: left;
            padding: 8px;
        }

        #login-div {
            position: absolute;
            right: 38%;
            top: 37%;
            border: 1px solid #ccc;
            padding: 5px 5px;
        }
    </style>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js">
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js">
    </script>
    <link href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript">
        $(document).ready(
            function () {
                $('.datepicker').datepicker({

                    changeMonth: true,
                    changeYear: true,
                    minDate: "-99Y",
                    dateFormat: "dd/mm/yy"

                })
            });
    </script>

</head>


@using (Html.BeginForm())
{
<header class="page-header"> <h4 style="text-align:center">Employee Creation</h4></header>
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @ViewBag.Message
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMPLOYEE_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMPLOYEE_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EMPLOYEE_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PHONE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PHONE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PHONE, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.ALTERNATE_PHONE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ALTERNATE_PHONE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ALTERNATE_PHONE, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.EMERGENCY_NUMBER, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMERGENCY_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EMERGENCY_NUMBER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LOCATION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LOCATION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LOCATION, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.BLOOD_GROUP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BLOOD_GROUP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BLOOD_GROUP, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GENDER", new List<SelectListItem>
              {
              new SelectListItem{Text="Male",Value="Male"},
              new SelectListItem{Text="Female",Value="Female"},
              new SelectListItem{Text="Transgender",Value="Transgender"}
             }, "Select Gender", new { required = default(string) })
            @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Emp_start_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(a => a.Emp_start_date, new { @class = "datepicker" })
            @Html.ValidationMessageFor(model => model.Emp_start_date, "", new { @class = "text-danger" })
        </div>
    </div>


    @*<div class="form-group">
            @Html.LabelFor(model => model.manager_id, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.manager_id, ViewData["Manager"] as IEnumerable<SelectListItem>, "Select Manager")
                @Html.ValidationMessageFor(model => model.manager_id, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "Active" }, new SelectListItem { Text = "InActive", Value = "InActive" } }, "Select Option", new { required = default(string) })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ROLES, "Roles", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Roles", ViewData["Roles"] as IEnumerable<SelectListItem>, "Select Role")
            @Html.ValidationMessageFor(model => model.ROLES, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DEPARTMENT, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownList("Department", "Select Department")
            @Html.ValidationMessageFor(model => model.DEPARTMENT, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}
<div id="back-div">
    <a href="@Url.Action("Index","HR")">Back To Home</a>
</div>
<div id="logoff">
    <a href="@Url.Action("Logoff","Login")">LogOut</a>
</div>